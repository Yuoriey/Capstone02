@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {

            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <a id="logout" class="nav-link btn btn-link text-white border-0 hide-label" href="#"><i class='bx bx-log-out'></i> <span class="link_name">Logout</span></a>
                    <span class="tooltip">Logout</span>
                </form>
            </li>
        }
        else
        {

            <li class="nav-item">
                <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
	</ul>

<script>
    document.getElementById('logout').addEventListener('click', function (event) {
        event.preventDefault();

        var logoutForm = document.getElementById('logoutForm');
        if (logoutForm) {
            
            logoutForm.submit();
        }
    });
</script>